name: Testing the function and provisioning
on:
    push:
      branches: [ "main" ]
      paths:
        - 'backend/**'
        - 'terraform/**'
    workflow_dispatch:

permissions:
    contents: read

jobs:
    changes:
        runs-on: ubuntu-latest
        outputs:
            backend: ${{ steps.filter.outputs.backend }}
            terraform: ${{ steps.filter.outputs.terraform }}
        steps:
        - uses: actions/checkout@v3
        - uses: dorny/paths-filter@v2
          id: filter
          with:
            filters: |
                backend:
                    - 'backend/**'
                terraform:
                    - 'terraform/**'
    Terraform:
        defaults:
            run:
                working-directory: ./terraform
        needs: changes
        if: ${{ needs.changes.outputs.terraform == 'true' }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - name: Login to azure
              uses: azure/login@v1
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
            - name: Terraform Init
              run: terraform init -input=false
            - name: Terraform Plan
              env:
                TF_VAR_AzureResumeConnectionString: ${{ secrets.TF_VAR_AZURERESUMECONNECTIONSTRING}}
              run: terraform plan -input=false 
            - name: Terraform apply
              env:
                TF_VAR_AzureResumeConnectionString: ${{ secrets.TF_VAR_AZURERESUMECONNECTIONSTRING}}
              run: terraform apply -auto-approve -input=false
